[x] Decide on the overall structure of the application
[ ] Create everything necessary to get to the basic GUI
        [x] Create basic invoker which processes commands
                [ ] If the processing is not sufficient, induce other overhead to improve eg.: merging commands, sorting them, etc.
        [x] Create the basic application flow
                [x] Decide on the overall app flow
                [x] Finish the application init
                [x] Create the main loop
        [x] Integrate the thread system
        [x] Add basic user input (so you can close the app)
                [x] User input handler
                [x] Create json keybindings file
                [ ] Create a parser for the keybindings to be read into a map
                        [ ] Hard code the map and perhaps in the future support custom keybindings
                        [ ] Also InputHandler needs access to app context
        [ ] IMPLEMENT ALL .HPP FILES
        [ ] Finish the json/bin system
                [x] Create a json to bin converter
                [ ] Create tests for the converter
        [ ] Create the basic GUI
        [ ] Create basic GUI
                [ ] Start with constant dimensions with relative in mind
                [ ] Decide on the json format (used for scenes aka it is a recipe for the renderer)
                [ ] Write json to binary tool
                [ ] Write binary interpreter
                [ ] Create a json scene format
                        [ ] Write renderer for the scene format
[ ] Write tests
        [ ] Add test arguments (and test macro)
        [ ] Add test to cmake
        [ ] Integrate test system logic
[ ] Improve documentation
[ ] Fix scripts (the args may be wrong but im not sure)